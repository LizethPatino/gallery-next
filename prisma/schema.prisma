// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(cuid())
  name     String?
  email    String   @unique
  image    String?
  emailVerified  DateTime? // Asegúrate de que este campo sea de tipo `DateTime?`
  accounts Account[]
  sessions Session[]
  favorites     Favorite[] 

   @@map("user") 
}

model Favorite {
  id          String   @id @default(cuid())
  userId      String
  imageId     String
  imageUrl    String
  description String
  user        User     @relation(fields: [userId], references: [id])

   @@map("favorite") 
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime

   @@map("session") 
}

model Account {
  id                   String   @id @default(cuid())
  userId               String
  provider            String
  providerAccountId   String
  type               String   // ← Este campo es necesario
  user                 User     @relation(fields: [userId], references: [id])
  access_token      String?  // Token de acceso
  expires_at        Int?     // Expiración del token
  refresh_token     String?  // Token de refresco
  scope             String?
  token_type        String?
  id_token          String?
  session_state     String?
  @@unique([provider, providerAccountId])  // Agregar clave compuesta

   @@map("account") 
}
